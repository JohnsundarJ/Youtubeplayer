{"version":3,"sources":["Perspectives.js","App.js","serviceWorker.js","index.js"],"names":["BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","Perspectives","state","videoid","video","showPassword","handleClickShowPassword","setState","handleMouseDownPassword","event","preventDefault","video1","id","img","Image","src","scope","this","onload","width","alert","e","target","value","classes","props","className","AppBar","position","color","Toolbar","Typography","title","Grid","container","md","xs","List","component","list","aria-label","ListItem","ListItemText","style","paddingTop","justifyContent","alignItems","display","TextField","text","variant","onChange","handlechange","label","disableRipple","fullWidth","bootbutton","onClick","validVideoId","bootbutton1","Divider","videoId","opts","height","playerVars","onReady","_onReady","pauseVideo","Component","theme","maxWidth","flexgrow","marginTop","spacing","textField","card","flexGrow","textAlign","button","marginLeft","marginRight","paddingBottom","cardheader","palette","primary","main","orange","getContrastText","deepOrange","paddingtop","tooltip","rippleBackgroundColor","App","history","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad565eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst styles = theme => ({\r\n    list:{\r\n      width: '100%',\r\n    maxWidth: 800,\r\n    backgroundColor: '#F0F8FF'\r\n    // theme.palette.background.black,\r\n  },\r\n \r\n  root: {\r\n    flexgrow: 1,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    }\r\n  },\r\n  textField:{\r\n    width:'49ch'\r\n  },\r\n  card: {\r\n    boxShadow: \"0px 0px 5px 5px rgba(0,0,0,0.3)\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 16px 30px 12.125px rgba(0,0,0,0.3)\"\r\n    }\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    fontSize:\"20px\"\r\n  },\r\n  bootbutton:{\r\nwidth:'50%',\r\nheight:'40%'\r\n  },\r\n  button: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  text: {\r\n    width: '75%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    color: 'white',\r\n    paddingBottom:\"10px\"\r\n  },\r\n  cardheader: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: '#fff'\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    paddingtop: '10px'\r\n  },\r\n  tooltip: {\r\n    rippleBackgroundColor: 'red'\r\n  },\r\n  bootbutton1:{\r\n    width:'30%',\r\n    height:'40%',\r\n    marginLeft:\"10px\",\r\n    backgroundColor:\"red\"\r\n      }\r\n});\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 15,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1,\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      backgroundColor: '#0069d9',\r\n      borderColor: '#0062cc',\r\n      boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#0062cc',\r\n      borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n  },\r\n})(Button);\r\nclass Perspectives extends Component {\r\n  state = {\r\n   videoid:null,\r\n    video:null,\r\n    showPassword: false\r\n  };\r\n  handleClickShowPassword = () => {\r\n    this.setState({\r\n      showPassword:!this.state.showPassword\r\n    })\r\n  };\r\n handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n  video=()=>{\r\nthis.setState({video:this.state.videoid})\r\n  }\r\n  video1=()=>{\r\n    this.setState({video:null})\r\n      }\r\n   validVideoId(id) {\r\n        var img = new Image();\r\n        img.src = \"https://img.youtube.com/vi/\" + id + \"/mqdefault.jpg\";\r\n        const scope = this\r\n        img.onload = function () {\r\n          if(this.width===120){\r\n            scope.setState({video:null})\r\n           alert(\"Invalid video id\");\r\n          }\r\n          else{\r\n            scope.setState({video:id})\r\n        }\r\n      }\r\n      }\r\n  handlechange(e) {\r\n    this.setState({\r\n      videoid: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\nconst opts = {\r\n  height: '370',\r\n  width: '650',\r\n  playerVars: {\r\n    // https://developers.google.com/youtube/player_parameters\r\n  },\r\n};\r\n    return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar>               \r\n              <Typography className={classes.title}>\r\n                Youtube player                          </Typography>\r\n             \r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n       <Grid container>\r\n       <Grid md={3} />\r\n       <Grid md={6} xs={12}>\r\n          <List component=\"nav\" className={classes.list} aria-label=\"mailbox folders\">\r\n      <ListItem >\r\n        <ListItemText > \r\n        <div style={{paddingTop:\"5px\",justifyContent:\"center\",alignItems:\"center\",display:\"flex\"}}>\r\n        <TextField\r\n                          className={classes.text}\r\n                          variant=\"outlined\" id=\"videoid\" value={this.state.videoid} onChange={e => this.handlechange(e)} label=\"Video Id\"\r\n                        />\r\n</div>\r\n               <div style={{paddingTop:\"5px\",justifyContent:\"center\",alignItems:\"center\",display:\"flex\"}}>\r\n               <BootstrapButton\r\n                        disableRipple\r\n                        fullWidth className={classes.bootbutton}\r\n                          onClick={() => this.validVideoId(this.state.videoid)} variant=\"contained\" color=\"secondary\">\r\n                          Video explanation\r\n</BootstrapButton>\r\n<BootstrapButton\r\n                        disableRipple\r\n                        fullWidth className={classes.bootbutton1}\r\n                          onClick={() => this.video1()} variant=\"contained\" color=\"secondary\">\r\n                          Close\r\n</BootstrapButton>\r\n                   </div>\r\n                {/* <Grid container>\r\n                </Grid> */}\r\n                        </ListItemText> \r\n      </ListItem>\r\n      <Divider />\r\n      {this.state.video!==null ?\r\n    <div>\r\n      <ListItem>\r\n <YouTube videoId={this.state.video} opts={opts} onReady={this._onReady} />\r\n          </ListItem>\r\n      <Divider />\r\n      </div>\r\n      :null\r\n      }\r\n    </List>\r\n    </Grid>\r\n    <Grid md={3} />\r\n    </Grid>\r\n          </div>\r\n    );\r\n  }\r\n  _onReady(event) {\r\n    event.target.pauseVideo();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Perspectives);\r\n","import React,{Component} from 'react';\nimport Perspectives from './Perspectives';\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom';\nimport { createBrowserHistory as history} from 'history';\n\nclass App extends Component {\n  render(){\n  return (\n    <Router history={history }>\n    <div>\n    <Switch>\n<Route path=\"/\" exact component={Perspectives} />\n</Switch>\n</div>\n</Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import {HashRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import {BrowserRouter as Router} from 'react-router-dom';\n// import axios from 'axios';\n\nReactDOM.render(\n    // <Router>\n    // function componentDidMount(){\n    //     this.timerID = setInterval(\n    //       () => this.checklimitfun(),\n    //       60000\n    //     )\n    //   },\n    //   async componentWillUnmount() {\n    //     clearInterval(this.timerID)\n    //   },\n    //   checklimitfun() {\n    //     axios.post('http://localhost:4000/checklimit')\n    //       .then(response => {\n    //         console.log(\"send mail\")\n    //       })\n    //       .catch(console.log)\n    //   },\n      <App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}